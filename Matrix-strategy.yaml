name: OS Packer Pipeline

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
      id-token: 'write'
      contents: 'read'
      security-events: 'write'

jobs:  
  build-rhel:
    runs-on: ubuntu-latest
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'prj-ospacker-useast-dev-23295'
          service_account: 'sa-ospacker-us-4002@prj-ospacker-useast-dev-23295.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/463003052712/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider'

      - name: Setup HashiCorp Packer
        uses: hashicorp/setup-packer@v3.0.0

      - name: Run Packer for RHEL
        run: packer init gcp-rhel.pkr.hcl

      - name: Run Packer for RHEL
        run: packer build gcp-rhel.pkr.hcl
        env:
          PACKER_LOG: 1
          PACKER_LOG_PATH: packer.log   
          DYNATRACE_API_TOKEN: ${{secrets.DYNATRACE_API_TOKEN}}
        
      - name: Verify packer log
        run: ls -la packer.log

      - name: Save generated image name
        id: get-image-name
        run: |
          IMAGE_NAME=$(grep 'A disk image was created' packer.log | head -n1 | awk '{print $NF}' | tr -d '\r\n}"')
          echo "image_name=$IMAGE_NAME" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME: $IMAGE_NAME"

      - name: Download Wiz CLI
        run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli

      - name: Authenticate to Wiz
        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
  
      - name: Run wiz-cli GCP images scan
        run: |
          echo "$IMAGE_NAME"
          ./wizcli vm-image scan --id $IMAGE_NAME --subscriptionId prj-ospacker-useast-dev-23295 --region us-east4 -p "$WIZ_IAC_POLICY"  --tag github_action_run_id=${{ github.run_id }} -o results.sarif,sarif,false
        env:
          IMAGE_NAME: ${{ steps.get-image-name.outputs.image_name }}
          WIZ_IAC_POLICY: "Default vulnerabilities policy"

  cleanup-old-images:
    runs-on: ubuntu-latest
    needs: [build-rhel]  # Ensure this job runs after all packer builds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-cloud-compute
    
      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'prj-ospacker-useast-dev-23295'
          service_account: 'sa-ospacker-us-4002@prj-ospacker-useast-dev-23295.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/463003052712/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider'
    
      - name: Run the Python script to cleanup old images
        run: python cleanup_old_images.py  
    
