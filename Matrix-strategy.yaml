name: OS Packer Pipeline

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: 'write'
  contents: 'read'
  security-events: 'write'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [rhel, ubuntu, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'prj-ospacker-useast-dev-23295'
          service_account: 'sa-ospacker-us-4002@prj-ospacker-useast-dev-23295.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/463003052712/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider'

      - name: Setup HashiCorp Packer
        uses: hashicorp/setup-packer@v3.0.0

      - name: Run Packer for ${{ matrix.os }}
        run: |
          packer init gcp-${{ matrix.os }}.pkr.hcl
          packer build gcp-${{ matrix.os }}.pkr.hcl
        env:
          PACKER_LOG: 1
          PACKER_LOG_PATH: packer-${{ matrix.os }}.log
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}

      - name: Extract Image Name for ${{ matrix.os }}
        id: get-image-name
        run: |
          IMAGE_NAME=$(awk '/A disk image was created/ {print $NF}' packer-${{ matrix.os }}.log | tr -d '\r\n}"')
          echo "image_name=$IMAGE_NAME" >> "$GITHUB_OUTPUT"

      - name: Upload Packer Logs
        uses: actions/upload-artifact@v3
        with:
          name: packer-logs-${{ matrix.os }}
          path: packer-${{ matrix.os }}.log

  scan-wiz:
    needs: build
    uses: ./.github/workflows/wiz_scan.yml  # Calls the Wiz workflow
    with:
      os: ${{ matrix.os }}
      image_name: ${{ needs.build.outputs.image_name }}

  cleanup-old-images:
    runs-on: ubuntu-latest
    needs: [scan-wiz]  # Runs after Wiz scanning is done
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-cloud-compute

      - name: Google Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'prj-ospacker-useast-dev-23295'
          service_account: 'sa-ospacker-us-4002@prj-ospacker-useast-dev-23295.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/463003052712/locations/global/workloadIdentityPools/wif-pool/providers/wif-provider'

      - name: Run Cleanup Script
        run: python cleanup_old_images.py
